
services:
  # FastAPI Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://zid_user:zid_password@postgres:5432/zid_db
      - REDIS_URL=redis://redis:6379/0
      - ZID_CLIENT_ID=${ZID_CLIENT_ID}
      - ZID_CLIENT_SECRET=${ZID_CLIENT_SECRET}
      - ZID_REDIRECT_URI=${ZID_REDIRECT_URI}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - zid-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=zid_db
      - POSTGRES_USER=zid_user
      - POSTGRES_PASSWORD=zid_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zid_user -d zid_integration"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - zid-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - zid-network

  # Database Migration Service
  migration:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://zid_user:zid_password@postgres:5432/zid_db
    depends_on:
      postgres:
        condition: service_healthy
    command: ["alembic", "upgrade", "head"]
    volumes:
      - .:/app
    networks:
      - zid-network
    profiles:
      - migration

volumes:
  postgres_data:
  redis_data:

networks:
  zid-network:
    driver: bridge